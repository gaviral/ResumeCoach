# GitHub Actions CI/CD pipeline for ResumeCoach
# ------------------------------------------------
# This workflow validates every PR and deploys to the "prod" AWS account
# whenever changes land on the `main` branch.
#
# Required GitHub secrets (Repository → Settings → Secrets and variables → Actions):
#   AWS_ACCESS_KEY_ID           - AWS access key for authentication
#   AWS_SECRET_ACCESS_KEY       - AWS secret key for authentication
#   AWS_REGION                  – defaults to us‑west‑2 for this project
#
name: CI & CD

on:
  # Validate pull requests to main
  pull_request:
    branches: [main]
  # Deploy when main is updated
  push:
    branches: [main]

permissions:
  contents: read

env:
  # forwarded into `npm run check` → Vite build
  VITE_API_URL: ${{ secrets.VITE_API_URL }}
  AWS_REGION: us-west-2

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: production-deploy
      cancel-in-progress: false

    steps:
      # ─── 0. Clone ────────────────────────────────────────────────
      - uses: actions/checkout@v4

      # ─── 1. Toolchains ───────────────────────────────────────────
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      # ─── 2. Install deps ────────────────────────────────────────
      - name: Install root & workspace deps
        run: npm ci

      - name: Install backend deps
        run: |
          python -m pip install --upgrade pip uv
          uv pip install --system -r backend/requirements.txt
          # tooling that isn’t in backend/requirements.txt
          uv pip install --system black pytest

      # ─── 3. ESLint ───────────────────────────────────────────────
      - name: ESLint (fail on warnings)
        run: npm run -w frontend lint -- --max-warnings=0

      # ─── 4. Composite sanity check (lint + build + synth + pytest)
      - name: npm run check
        run: npm run check

      # ─── 5. Infrastructure deps (needed only for synth/deploy) ───
      - name: Install infra deps
        working-directory: infrastructure
        run: npm ci

      - name: CDK synth (repeat with full deps)
        working-directory: infrastructure
        run: npx cdk synth

      # ─── 6. Configure AWS creds & deploy (main pushes only) ─────
      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: CDK deploy (no approval)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: infrastructure
        run: npx cdk deploy --require-approval never
